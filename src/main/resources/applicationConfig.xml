<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--    <bean id="a" class="cn.melon.demo.A">-->
    <!--        <constructor-arg ref="b"/>-->
    <!--    </bean>-->
    <!--    <bean id="b" class="cn.melon.demo.B">-->
    <!--        <constructor-arg ref="a"/>-->
    <!--    </bean>-->

    <!--    <bean id="a" class="cn.melon.demo.A">-->
    <!--        <property name="b" ref="b"/>-->
    <!--    </bean>-->
    <!--    <bean id="b" class="cn.melon.demo.B">-->
    <!--        <property name="a"  ref="a"/>-->
    <!--    </bean>-->


<!--    <util:properties id="properties">-->

<!--    </util:properties>-->


    <!--    <bean id="a" class="cn.melon.demo.A" autowire="byName"/>-->
    <!--    <bean id="b" class="cn.melon.demo.B" autowire="byType"/>-->


<!--    <context:property-placeholder location="classpath:sa.properties"/>-->

<!--    <bean id="a" class="cn.melon.demo.A">-->
<!--        <property name="b" ref="#{b}"/>-->
<!--    </bean>-->
<!--    <bean id="b" class="cn.melon.demo.B">-->
<!--        <property name="a" ref="a"/>-->
<!--    </bean>-->

<!--    <bean id="lifeBean" class="cn.melon.demo.LifeBean"-->
<!--        init-method="init" destroy-method="destroy">-->
<!--        <property name="name" value="lifeBean"/>-->
<!--    </bean>-->

<!--    配置BeanPostProcessor的实例类，不用id，spring容器自动识别-->
<!--    <bean class="cn.melon.demo.MyBPP"/>-->

<!--    <bean id="bmw" class="cn.melon.demo.CarStaticFactory" factory-method="getCar">-->
<!--        <constructor-arg value="1"/>-->
<!--    </bean>-->

    <bean id="a" class="cn.melon.demo.A"/>

    <context:component-scan base-package="cn.melon">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--开启AOP注解-->
<!--    <aop:aspectj-autoproxy/>-->

    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* cn.melon.aop.*.*(..))"/>
        <aop:aspect ref="loggerAspect" order="1">
            <aop:before method="beforeMethod" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>

<!--    c3p0连接池-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="jdbcUrl" value="${jdbcUrl}"/>
        <property name="driverClass" value="${driverClass}"/>

        <property name="initialPoolSize" value="${initialPoolSize}"/>
        <property name="acquireIncrement" value="${acquireIncrement}"/>
        <property name="minPoolSize" value="${minPoolSize}"/>
        <property name="maxPoolSize" value="${maxPoolSize}"/>
        <property name="maxStatements" value="${maxStatements}"/>
        <property name="maxStatementsPerConnection" value="${maxStatementsPerConnection}"/>
    </bean>


    <!--    加载事务管理对象   -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--    配置事务属性   -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="*" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <!--    配置事务切入点   -->
    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* (cn.melon.jdbc).*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!--开启事务注解-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>